package simples;

message Block {
    optional bytes hash = 1;
    optional bytes signature = 2;

    optional BlockBody body = 3;
}

message BlockBody {
    optional bytes staker_pk = 1;
    optional int64 timestamp = 2;

    repeated Transaction transactions = 3;
}

message Commitment {
    enum Type {
        INVALID = 0;
        TRANSFER = 1;
    }
    optional Type tx_type = 1;
    optional bytes bounty_pk = 2;
    optional uint64 bounty = 3;
    repeated Transfer transfers = 4;
}

message DetachedSignature {
    optional bytes public_key = 1;
    optional bytes payload = 2;
}

message Transaction {
    repeated DetachedSignature signatures = 1;
    optional bytes commit_hash = 2;
    optional Commitment commit = 3;
}

message Transfer {
    optional uint32 op_index = 1;
    optional uint64 tokens = 2;
    optional bytes source_pk = 3;
    optional bytes destination_pk = 4;
}
