package simples;

/*****  Ledger Messages  *****/

message Block {
    optional bytes hash = 1;
    optional bytes signature = 2;

    optional BlockBody body = 3;
}

message BlockBody {
    optional bytes staker_pk = 1;
    optional int64 timestamp = 2;

    repeated Transaction transactions = 3;
}

message Commitment {
    enum Type {
        INVALID = 0;
        TRANSFER = 1;
    }
    optional Type tx_type = 1;
    optional bytes bounty_pk = 2;
    optional uint64 bounty = 3;
    repeated Transfer transfers = 4;
}

message DetachedSignature {
    optional bytes public_key = 1;
    optional bytes payload = 2;
}

message Transaction {
    repeated DetachedSignature signatures = 1;
    optional Commitment commit = 2;
}

message Transfer {
    optional uint32 op_index = 1;
    optional uint64 tokens = 2;
    optional bytes source_pk = 3;
    optional bytes destination_pk = 4;
}

message Wallet {
    repeated WalletKey keys = 1;
}

message WalletKey {
    optional bytes public_key = 1;
    optional bytes secret_key = 2;
    optional string name = 3;
    optional string description = 4;
}

/*****  RPC Messages  *****/

message RpcRequest {
    enum Method {
        INVALID = 0;
        PUBLISH_TRANSACTION = 1;
    }
    optional Method method = 1;

    optional PublishTransactionRequest pub_transaction = 2;
}

message RpcResponse {
    enum Status {
        INVALID = 0;
        OK = 1;
        INVALID_MESSAGE = 2;
        INVALID_METHOD = 3;
    }
    optional Status status = 1;
    optional string description = 2;

    optional PublishTransactionResponse pub_transaction = 3;
}

message PublishTransactionRequest {
    optional Transaction transaction = 1;
}

message PublishTransactionResponse {
    enum Status {
        INVALID = 0;
        OK = 1;
        INVALID_REQUEST = 2;
    }
    optional Status status = 1;
    optional string description = 2;
}
